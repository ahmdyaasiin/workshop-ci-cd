name: workshop-ci-cd

on: push

jobs:
  lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v5

      - name: Setup Go Environment
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Linting Code
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v5

      - name: Setup Go Environment
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Testing Code
        run: go test ./...

  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v5

      - name: Setup Go Environment
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-generated ./...

  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: [lint, test, scan]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v5

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

  pull-and-deploy:
    name: Pull Image and Deploy
    runs-on: ubuntu-latest
    needs: build-and-push

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v5

      - name: Make Directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: mkdir -p $HOME/${{ github.event.repository.name }}

      - name: Create .env File
        run: |
          printf '%s' '${{ secrets.ENV }}' > .env

      - name: Copy via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "."
          target: $HOME/${{ github.event.repository.name }}

      - name: Execute SSH
        env:
          USERNAME: ${{ github.actor }}
          PAT: ${{ secrets.PAT }}
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: USERNAME,PAT,IMAGE_NAME,IMAGE_TAG
          script: |
            echo $PAT | docker login ghcr.io -u $USERNAME --password-stdin
            cd $HOME/${{ github.event.repository.name }}
            make compose-up
            make migrate-up
